spring.datasource.driverClassName=org.postgresql.Driver

spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://${POSTGRES_DOMAIN:db}:${POSTGRES_PORT:5432}/${POSTGRES_DB:service-db}?currentSchema=${POSTGRES_SCHEMA:agent_schema}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:root}

spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

fanout.exchange=fanout-exchange
queue.name=queue-name
queue.name1=queue-name1

eureka.client.fetchRegistry=true

spring.rabbitmq.host=${RQM_HOST:localhost}
spring.rabbitmq.port=${RMQ_PORT:5671}
spring.rabbitmq.ssl.enabled=true
spring.rabbitmq.ssl.algorithm=TLSv1.2
spring.rabbitmq.ssl.key-store=classpath:agent.keystore.p12
spring.rabbitmq.ssl.key-store-password=password
spring.rabbitmq.ssl.trust-store=classpath:agent.truststore.p12
spring.rabbitmq.ssl.trust-store-password=password

# TSL
server.ssl.algorithm=${TLS_VERSION:TLSv1.2}
server.ssl.key-store-type=${KEYSTORE_TYPE:PKCS12}
server.ssl.key-store=${KEYSTORE:classpath:agent.keystore.p12}
server.ssl.key-store-password=${KEYSTORE_PASSWORD:password}
server.ssl.key-alias=${KEYSTORE_ALIAS:agent}
server.ssl.trust-store-type=${TRUSTSTORE_TYPE:PKCS12}
server.ssl.trust-store=${TRUSTSTORE:classpath:agent.truststore.p12}
server.ssl.trust-store-password=${TRUSTSTORE_PASSWORD:password}
server.ssl.enabled=true
server.ssl.client-auth=need